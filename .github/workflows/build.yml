name: Build

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: build and release electron app
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
    env:
      GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

    steps:
      - name: Check out git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Dependencies
        run: |
          npm i -g pnpm
          pnpm install

      - name: Build Electron App for Windows
        if: matrix.os == 'windows-latest'
        run: pnpm run build:win

      - name: Build Electron App for MacOS
        if: matrix.os == 'macos-latest'
        run: pnpm run build:mac

      - name: Cleanup Artifacts for Windows
        if: matrix.os == 'windows-latest'
        run: |
          npx rimraf "release/*/!(*.exe|*.zip|*.yml)"

      - name: Cleanup Artifacts for MacOS
        if: matrix.os == 'macos-latest'
        run: |
          npx rimraf "release/*/!(*.dmg|*.zip|latest*.yml)"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: release

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: 'release/**'

  sync-to-cn-server:
    name: Sync update files to CN server
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-latest
          path: ./release-artifacts/windows

      - name: Download MacOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-latest
          path: ./release-artifacts/macos

      - name: Prepare update files
        run: |
          mkdir -p ./update-files
          echo "Finding all update files..."
          find ./release-artifacts -type f -name "*.exe" -o -name "*.dmg" -o -name "latest*.yml" | sort
          echo "Copying Windows files..."
          cp -v ./release-artifacts/windows/**/latest*.yml ./update-files/ 2>/dev/null || echo "No Windows yml files found"
          cp -v ./release-artifacts/windows/**/*.exe ./update-files/ 2>/dev/null || echo "No Windows exe files found"
          echo "Copying macOS files..."
          cp -v ./release-artifacts/macos/**/latest*.yml ./update-files/ 2>/dev/null || echo "No macOS yml files found"
          cp -v ./release-artifacts/macos/**/*.dmg ./update-files/ 2>/dev/null || echo "No macOS dmg files found"
          echo "Files ready for upload:"
          ls -la ./update-files/
          if [ -z "$(ls -A ./update-files/)" ]; then
            echo "ERROR: No files found to upload!"
            exit 1
          fi

      - name: Clean target directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.CN_SERVER_HOST }}
          username: ${{ secrets.CN_SERVER_USERNAME }}
          password: ${{ secrets.CN_SERVER_PASSWORD }}
          port: ${{ secrets.CN_SERVER_PORT }}
          script: |
            mkdir -p /wwwroot/update.isyangs.cn
            rm -rf /wwwroot/update.isyangs.cn/*
            echo "Update directory cleaned!"

      - name: Deploy to CN server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.CN_SERVER_HOST }}
          username: ${{ secrets.CN_SERVER_USERNAME }}
          password: ${{ secrets.CN_SERVER_PASSWORD }}
          port: ${{ secrets.CN_SERVER_PORT }}
          source: './update-files/*'
          target: /wwwroot/update.isyangs.cn
          strip_components: 1

      - name: Verify deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.CN_SERVER_HOST }}
          username: ${{ secrets.CN_SERVER_USERNAME }}
          password: ${{ secrets.CN_SERVER_PASSWORD }}
          port: ${{ secrets.CN_SERVER_PORT }}
          script: |
            cd /wwwroot/update.isyangs.cn
            ls -la
            echo "Update files sync completed!"
